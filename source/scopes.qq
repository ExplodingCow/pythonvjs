\topic
    \id scopes
    \heading \lang ru
        Области видимости
    \heading \lang en
        Scopes
    \description \lang ru
        Имена переменных (в т.ч. функций) в Python и JavaScript могут
        принадлежать разным областям видимости (*scopes*). Например, локальная
        переменная, определенная внутри функции, недоступна извне этой функции.
    \description \lang en
        Variable names (including function names) in Python and JavaScript can
        belong to different scopes. For example, local variable defined inside
        function is not accessible from outside of a function.
    \compare
        \id default-variable-scope
        \what \lang ru
            Область видимости по умолчанию
        \what \lang en
            Default variable scope
        \python
            x = 1
            def fun():
                x = 2
                print("Inside function, x =", x)
            fun()
            print("Outside function, x =", x)
            \comment \lang ru
                По умолчанию, переменная, создаваемая внутри функции, является
                локальной.
            \comment \lang en
                By default, variable declared inside a function is a local one.
        \python
            x = 1
            def fun():
                global x
                x = 2
                print("Inside function, x =", x)
            fun()
            print("Outside function, x =", x)
            \comment \lang ru
                Чтобы иметь возможность модифицировать глобальную переменную
                изнутри функции, нужно использовать ключевое
                слово `global`.
            \comment \lang en
                To be able to modify the global variable inside a function one
                have to use `global` command.
        \js
            x = 1;
            function fun() {
                x = 2;
                console.log("Inside function, x =", x)
            }
            fun();
            console.log("Outside function, x =", x)
            \comment \lang ru
                При создании переменной внутри функции в JavaScript по умолчанию
                она помещается в глобальный фрейм. Для создания локальной
                переменной необходимо использовать команду `var`.
            \comment \lang en
                If one creates variable inside a function in JavaScript, by
                default it is a global variable. To declare a local variable,
                one have to use command `var`.
        \js
            x = 1; // global x
            function fun() {
                var x = 2; // local x
                console.log("Inside function, x =", x)
            }
            fun();
            console.log("Outside function, x =", x)
        \comment \lang ru
            `var` создаёт локальную переменную.
        \comment \lang en
            `var` declares local variable.
        \js
            function sum_of_numbers(k) {
                var s=0;
                for (i=0; i<k; i++) {
                    s += i
                }
                return s
            }
            i = 5;
            console.log("Sum of numbers from 1 to 100 is", 
                        sum_of_numbers(101));
            console.log("And i =", i);
            \comment \lang ru
                Забыли объявить переменную `i` — и вот результат.
            \comment \lang en
                We forgot to declare variable `i` — and here is the result.

            
